{"version":3,"file":"alchemy.controls.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;ACVe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRkC;AAClC;AACA,oBAAoB,6CAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC9Ec;AAClC;AACA,sBAAsB,6CAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,OAAO;;;;;;;;;;;;;;ACjCtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,KAAK;AACjE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iEAAe,GAAG;;;;;;UC3ClB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA,kBAAkB;AAClB;;;;GAIG;AAEsC;AACH;AACN;AAEhC,iEAAe;IACX,OAAO,EAAE,yDAAO;IAChB,KAAK,EAAE,wDAAM;IACb,GAAG,EAAE,qDAAG;CACX","sources":["webpack://AlchemyUI/webpack/universalModuleDefinition","webpack://AlchemyUI/./js/controls/_base.js","webpack://AlchemyUI/./js/controls/alerts.js","webpack://AlchemyUI/./js/controls/spinner.js","webpack://AlchemyUI/./js/controls/tab.js","webpack://AlchemyUI/webpack/bootstrap","webpack://AlchemyUI/webpack/runtime/define property getters","webpack://AlchemyUI/webpack/runtime/hasOwnProperty shorthand","webpack://AlchemyUI/webpack/runtime/make namespace object","webpack://AlchemyUI/./js/index.umd.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AlchemyUI\"] = factory();\n\telse\n\t\troot[\"AlchemyUI\"] = factory();\n})(self, () => {\nreturn ","export default class AlchemyBase {\r\n    constructor(alchemyCSS = null) {\r\n        this._css = alchemyCSS;\r\n    }\r\n\r\n    css(className) {\r\n        return this._css ? this._css[className] : className;\r\n    }\r\n}","import AlchemyBase from './_base';\r\n\r\nclass Alert extends AlchemyBase {\r\n    constructor(content, css=null) {\r\n        super(css);\r\n        this._content = content;\r\n    }\r\n\r\n    duration(duration) {\r\n        this._duration = duration;\r\n        return this;\r\n    }\r\n    \r\n    icon(icon) {\r\n        this._icon = icon;\r\n        return this;\r\n    }\r\n\r\n    warn() {\r\n        this._icon = this._icon || \"fa-exclamation-circle\";\r\n        this._style = super.css('warn');\r\n        this._show();\r\n    }\r\n\r\n    primary() {\r\n        this._icon = this._icon || \"fa-info-circle\";\r\n        this._style = null;\r\n        this._show();\r\n    }\r\n\r\n    success() {\r\n        this._icon = this._icon || \"fa-check\";\r\n        this._style = super.css('success');\r\n        this._show();\r\n    }\r\n\r\n    error() {\r\n        this._icon = this._icon || \"fa-times-octagon\";\r\n        this._style = super.css('error');\r\n        this._show();\r\n    }\r\n\r\n    info() {\r\n        this._icon = this._icon || \"fa-info-circle\";\r\n        this._style = super.css('info');\r\n        this._show();\r\n    }\r\n    \r\n    _show() {\r\n        if (!document.getElementById(\"alchemy-alerts\")) {\r\n            let container = document.createElement('div');\r\n            container.id = \"alchemy-alerts\";\r\n            container.className = super.css('alerts');\r\n            document.body.prepend(container);\r\n        }\r\n        let newDiv = document.createElement(\"div\");\r\n        newDiv.classList.add(super.css('alert'));\r\n        if (this._duration != null) {\r\n            newDiv.classList.add(super.css('disappear'));\r\n            if (this._duration != \"\") newDiv.classList.add(this._duration);\r\n        }\r\n        this._style && newDiv.classList.add(this._style);\r\n        let i = document.createElement(\"i\");\r\n        i.classList.add('fad');\r\n        i.classList.add(super.css('m-r-compat'));\r\n        i.classList.add(this._icon);\r\n        let newContent = document.createTextNode(this._content);\r\n        newDiv.appendChild(i);\r\n        newDiv.appendChild(newContent);\r\n        document.getElementById(\"alchemy-alerts\").appendChild(newDiv);\r\n    }\r\n\r\n    static dismissAll() {\r\n        let container = document.getElementById(\"alchemy-alerts\");\r\n        container && document.body.removeChild(container);\r\n    }\r\n}\r\n\r\nexport default Alert;","import AlchemyBase from './_base';\r\n\r\nclass Spinner extends AlchemyBase {\r\n    constructor(css=null) {\r\n        super(css);\r\n    }\r\n\r\n    start() {\r\n        if (document.body.hasAttribute('alchemy-spin-scene')) {\r\n            throw new Exception(\"This webapp has already started spining\");\r\n        }\r\n        let scene = document.createElement('div');\r\n        scene.classList.add(super.css(\"scene\"));\r\n        let div = document.createElement('div');\r\n        div.classList.add(super.css(\"hero\"));\r\n        div.style.left = '50%';\r\n        div.style.transform = \"translate(-50%, -50%)\";\r\n        let spinner = document.createElement('span');\r\n        spinner.classList.add(super.css('spinner'), super.css('low-profile'));\r\n        div.appendChild(spinner);\r\n        scene.appendChild(div);\r\n        document.body.appendChild(scene);\r\n        document.body.setAttribute('alchemy-spin-scene', 'true');\r\n        this.runningScene = scene;\r\n    }\r\n\r\n    stop() {\r\n        document.body.removeChild(this.runningScene);\r\n        document.body.removeAttribute(\"alchemy-spin-scene\");\r\n        delete this.runningScene;\r\n    }\r\n}\r\n\r\nexport default Spinner;","class Tab {\r\n    static attach(element) {\r\n        if (!element || !element.classList.contains(\"tab\")) {\r\n            throw \"This element has to be a tab.\";\r\n        }\r\n        return new Tab(element);\r\n    }\r\n\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.items = [];\r\n        this.active = null;\r\n        for (let i = 0; i < element.children.length; i++) {\r\n            let item = element.children[i];\r\n            if (item.classList.contains(\"item\")) {\r\n                if (item.hasAttribute(\"name\")) {\r\n                    this.items.push(item);\r\n                    if (item.classList.contains(\"active\")) {\r\n                        this.active = item;\r\n                    }\r\n                    item.addEventListener(\"click\", (() => {\r\n                        this.select(item.getAttribute(\"name\"));\r\n                    }).bind(this));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    select(name) {\r\n        if (this.active) {\r\n            this.active.classList.remove(\"active\");\r\n            this.active = null;\r\n        }\r\n        let item = this.element.querySelector(`.item[name=${name}]`);\r\n        if (item && this.items.indexOf(item) > -1) {\r\n            item.classList.add(\"active\");\r\n            this.active = item;\r\n        } else {\r\n            throw \"Item not found\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Tab;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*eslint-env es6*/\r\n/*!\r\n * Alchemy UI v1.0.0 (https://github.com/tearfulDalvik/Alchemy)\r\n * Copyright 2020 Gufeng Shen\r\n * Licensed under MIT (https://github.com/tearfulDalvik/Alchemy/blob/main/LICENSE)\r\n */\r\n\r\nimport Spinner from './controls/spinner';\r\nimport Alerts from './controls/alerts'\r\nimport Tab from './controls/tab'\r\n\r\nexport default {\r\n    Spinner: Spinner,\r\n    Alert: Alerts,\r\n    Tab: Tab,\r\n}"],"names":[],"sourceRoot":""}